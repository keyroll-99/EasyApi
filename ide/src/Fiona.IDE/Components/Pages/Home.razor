@page "/"
@using Blazor.Diagrams.Core.Geometry
@using Blazor.Diagrams.Components
@using Blazor.Diagrams.Core.Behaviors
@using Fiona.IDE.Components.Behavior

<div class="diagram-container">
    <CascadingValue Value="Diagram" IsFixed="true">
        <DiagramCanvas></DiagramCanvas>
    </CascadingValue>
</div>


@code
{
    private BlazorDiagram Diagram { get; set; } = null!;

    protected override void OnInitialized()
    {
        var options = new BlazorDiagramOptions
        {
            AllowMultiSelection = true,
            Zoom =
            {
                Enabled = false,
            },
            Links =
            {
                DefaultRouter = new NormalRouter(),
                DefaultPathGenerator = new SmoothPathGenerator()
            },
        };

        Diagram = new BlazorDiagram(options);

        var firstNode = Diagram.Nodes.Add(new NodeModel(position: new Point(50, 50))
        {
            Title = "Node 1"
        });
        var secondNode = Diagram.Nodes.Add(new NodeModel(position: new Point(200, 100))
        {
            Title = "Node 2"
        });
        var leftPort = secondNode.AddPort(PortAlignment.Left);
        var rightPort = secondNode.AddPort(PortAlignment.Right);

        // The connection point will be the intersection of
// a line going from the target to the center of the source
        var sourceAnchor = new ShapeIntersectionAnchor(firstNode);
// The connection point will be the port's position
        var targetAnchor = new SinglePortAnchor(leftPort);
        var link = Diagram.Links.Add(new LinkModel(sourceAnchor, targetAnchor));

        var oldSelectionBehavior = Diagram.GetBehavior<SelectionBehavior>()!;
        Diagram.UnregisterBehavior<SelectionBehavior>();
        Diagram.RegisterBehavior(new MyBehavior(Diagram));
    }


}

<style>
    .diagram-container {
	    width: 90%;
        margin: auto;
        height: 400px;
        border: 1px solid black; /* Just visual */
    }
</style>
